nativecall = module 
(
  import core
  where
    list x = type (native-wrap java.util.ArrayList)

    main arg=
      debug (first (fn(add (list => empty)) <= "test"))
      where
        first mylist = fn (nth mylist) <= 0
        nth mylist = fn index => (native-call "java/util/ArrayList" "Object get(java.lang.Integer)" java.util.ArrayList::(native-unwrap value::list <= mylist) java.lang.Integer::index)
        add mylist = fn item=> (native-call "java/util/ArrayList" "bool add(Object)" java.util.ArrayList::(native-unwrap value::list <= mylist) Object::item)


)
